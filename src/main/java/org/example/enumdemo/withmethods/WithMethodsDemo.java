package org.example.enumdemo.withmethods;

import java.util.EnumMap;
import java.util.Map;

/**
 * –ü—Ä–∏–∫–ª–∞–¥ ‚Ññ6: Enum —ñ–∑ —Ä—ñ–∑–Ω–∏–º–∏ –º–µ—Ç–æ–¥–∞–º–∏.
 *
 * ‚úÖ –¢—É—Ç –º–∏ –¥–µ–º–æ–Ω—Å—Ç—Ä—É—î–º–æ:
 *   - –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ (–¥–æ–ø–æ–º—ñ–∂–Ω–∞ –ª–æ–≥—ñ–∫–∞, –Ω–µ –≤–∏–¥–Ω–æ –∑–æ–≤–Ω—ñ)
 *   - –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ (API –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤ enum)
 *   - —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ (—É—Ç–∏–ª—ñ—Ç–∏: –ø–æ—à—É–∫, –ø–æ–±—É–¥–æ–≤–∞ EnumMap)
 *
 * üîπ –ë—ñ–∑–Ω–µ—Å-–∫–µ–π—Å: —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–Ω—ñ —Ç–∞—Ä–∏—Ñ–∏
 *   - –ö–æ–∂–µ–Ω –≤–∏–¥ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç—É –º–∞—î –±–∞–∑–æ–≤—É —Ü—ñ–Ω—É
 *   - –Ñ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –∑–∞ –∫—ñ–ª–æ–º–µ—Ç—Ä
 *   - –Ñ –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ calculateCost(), —è–∫–∏–π –≤–∏–∫–ª–∏–∫–∞—î –ø—Ä–∏–≤–∞—Ç–Ω–∏–π
 *   - –Ñ —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ getTariffMap(), —è–∫–∏–π –ø–æ–≤–µ—Ä—Ç–∞—î EnumMap –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É
 */
public class WithMethodsDemo {

    public static void main(String[] args) {
        // 1Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø—É–±–ª—ñ—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É
        double distance = 15.0; // –∫–º
        double busCost = TransportType.BUS.calculateCost(distance);
        double taxiCost = TransportType.TAXI.calculateCost(distance);
        System.out.println("1. Bus cost = " + busCost);
        System.out.println("1. Taxi cost = " + taxiCost);

        // 2Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—á–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –º–∞–ø–∏ —Ç–∞—Ä–∏—Ñ—ñ–≤
        Map<TransportType, Double> tariffMap = TransportType.getTariffMap();
        System.out.println("\n2. Tariff map:");
        tariffMap.forEach((k, v) -> System.out.println("- " + k.name() + " = " + v + " per km"));
    }
}

/**
 * Enum TransportType
 *
 * üîπ –ú–∞—î –ø–æ–ª–µ baseRate (—Ü—ñ–Ω–∞ –∑–∞ –∫–º).
 * üîπ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –æ–±—á–∏—Å–ª–µ–Ω—å.
 * üîπ –ú–∞—î –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ calculateCost() —è–∫ API.
 * üîπ –ú–∞—î —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ getTariffMap() –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–∞—Ä–∏—Ñ—ñ–≤ —É –≤–∏–≥–ª—è–¥—ñ EnumMap.
 */
enum TransportType {
    BUS(2.5),
    TRAIN(1.8),
    TAXI(10.0);

    private final double baseRate;

    TransportType(double baseRate) {
        this.baseRate = baseRate;
    }

    // üîπ –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ ‚Äî —Ç—ñ–ª—å–∫–∏ –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—ñ–≤
    private double calculatePerKm() {
        return baseRate;
    }

    // üîπ –ø—É–±–ª—ñ—á–Ω–∏–π –º–µ—Ç–æ–¥ ‚Äî API –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
    public double calculateCost(double distanceKm) {
        return calculatePerKm() * distanceKm;
    }

    // üîπ —Å—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ ‚Äî –ø–æ–±—É–¥–æ–≤–∞ EnumMap –¥–ª—è —à–≤–∏–¥–∫–æ–≥–æ –¥–æ—Å—Ç—É–ø—É –¥–æ —Ç–∞—Ä–∏—Ñ—ñ–≤
    public static Map<TransportType, Double> getTariffMap() {
        EnumMap<TransportType, Double> map = new EnumMap<>(TransportType.class);
        for (TransportType type : values()) {
            map.put(type, type.calculatePerKm());
        }
        return map;
    }
}


/*
üìò –¢–µ–æ—Ä–µ—Ç–∏—á–Ω—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è
üîπ 1. –ü—Ä–∏–≤–∞—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏

    –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è –¥–ª—è —ñ–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—ó –ª–æ–≥—ñ–∫–∏, —è–∫–∞ –ø–æ—Ç—Ä—ñ–±–Ω–∞ —Ç—ñ–ª—å–∫–∏ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ enum.
    –£ –ø—Ä–∏–∫–ª–∞–¥—ñ calculatePerKm() –ø—Ä–∏—Ö–æ–≤—É—î –¥–µ—Ç–∞–ª—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É.
    –ó–∑–æ–≤–Ω—ñ –≤—ñ–Ω –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π, –∞–ª–µ –π–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å –ø—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏.

    –ö–æ–ª–∏ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏?
        –Ø–∫—â–æ —î –ø–æ–≤—Ç–æ—Ä—é–≤–∞–Ω–∞ –ª–æ–≥—ñ–∫–∞ –¥–ª—è –∫—ñ–ª—å–∫–æ—Ö –º–µ—Ç–æ–¥—ñ–≤ enum.
        –Ø–∫—â–æ –Ω–µ —Ö–æ—á–µ–º–æ, —â–æ–± –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ –¥–µ—Ç–∞–ª—ñ "—Å–≤—ñ—Ç–∏–ª–∏—Å—è" –≤ API.

üîπ 2. –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏

    –¶–µ API, —è–∫–µ –º–∏ –¥–∞—î–º–æ –∑–æ–≤–Ω—ñ—à–Ω—ñ–º –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞–º enum.
    –£ –ø—Ä–∏–∫–ª–∞–¥—ñ calculateCost(double distance) ‚Äî –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—á–∏—Å–ª–µ–Ω–Ω—è –≤–∞—Ä—Ç–æ—Å—Ç—ñ –ø–æ—ó–∑–¥–∫–∏.
    –í—ñ–Ω –≤–∏–∫–ª–∏–∫–∞—î –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –º–µ—Ç–æ–¥ —ñ –ø–æ–≤–µ—Ä—Ç–∞—î —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

    –ö–æ–ª–∏ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏?
        –ó–∞–≤–∂–¥–∏, –∫–æ–ª–∏ enum –º–∞—î –ª–æ–≥—ñ–∫—É, —è–∫–æ—é –ø–æ–≤–∏–Ω–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ç–∏—Å—è —ñ–Ω—à—ñ —á–∞—Å—Ç–∏–Ω–∏ –ø—Ä–æ–≥—Ä–∞–º–∏.

üîπ 3. –°—Ç–∞—Ç–∏—á–Ω—ñ –º–µ—Ç–æ–¥–∏

    –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—é—Ç—å—Å—è —è–∫ —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ enum —É —Ü—ñ–ª–æ–º—É.
    –£ –ø—Ä–∏–∫–ª–∞–¥—ñ getTariffMap() —Å—Ç–≤–æ—Ä—é—î EnumMap, –¥–µ –∫–ª—é—á = TransportType, –∞ –∑–Ω–∞—á–µ–Ω–Ω—è = —Ç–∞—Ä–∏—Ñ.
    –¶–µ –∑—Ä—É—á–Ω–æ, —è–∫—â–æ —Ç—Ä–µ–±–∞ —à–≤–∏–¥–∫–æ –∑–Ω–∞—Ö–æ–¥–∏—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –±–µ–∑ –ø–µ—Ä–µ–±–æ—Ä—É values().

    –ö–æ–ª–∏ –∑–∞—Å—Ç–æ—Å–æ–≤—É–≤–∞—Ç–∏?
        –î–ª—è –ø–æ—à—É–∫—É (fromCode, fromName, fromRegion).
        –î–ª—è –ø–æ–±—É–¥–æ–≤–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä (EnumMap, —Å–ø–∏—Å–∫–∏, —Å–µ—Ç).
        –î–ª—è —Ñ–∞–±—Ä–∏–∫ (create(...) —ñ–∑ —è–∫–∏—Ö–æ—Å—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ñ–≤).

üìå –í–∏—Å–Ω–æ–≤–∫–∏
    –ü—Ä–∏–≤–∞—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏ = —ñ–Ω–∫–∞–ø—Å—É–ª—è—Ü—ñ—è –ª–æ–≥—ñ–∫–∏ (–Ω–µ –≤–∏–¥–Ω–æ –∑–∑–æ–≤–Ω—ñ).
    –ü—É–±–ª—ñ—á–Ω—ñ –º–µ—Ç–æ–¥–∏ = API –¥–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ enum (—á–∏—Å—Ç–∞ —Ç–æ—á–∫–∞ –≤—Ö–æ–¥—É).
    –°—Ç–∞—Ç–∏—á–Ω—ñ –º–µ—Ç–æ–¥–∏ = —É—Ç–∏–ª—ñ—Ç–∏ –¥–ª—è —Ä–æ–±–æ—Ç–∏ –∑ —É—Å—ñ–º enum (–ø–æ—à—É–∫, –∫–æ–ª–µ–∫—Ü—ñ—ó, —Ñ–∞–±—Ä–∏–∫–∏).
    –¢–∞–∫–∏–π –ø—ñ–¥—Ö—ñ–¥ —Ä–æ–±–∏—Ç—å enum –Ω–µ –ø—Ä–æ—Å—Ç–æ –¥–æ–≤—ñ–¥–Ω–∏–∫–æ–º, –∞ –ø–æ–≤–Ω–æ—Ü—ñ–Ω–Ω–∏–º –º—ñ–Ω—ñ-–∫–ª–∞—Å–æ–º —ñ–∑ –≤–ª–∞—Å–Ω–æ—é –ª–æ–≥—ñ–∫–æ—é.
 */