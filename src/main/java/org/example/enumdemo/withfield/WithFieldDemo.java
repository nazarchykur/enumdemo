package org.example.enumdemo.withfield;

/**
 * –ü—Ä–∏–∫–ª–∞–¥ ‚Ññ2: Enum —ñ–∑ –ø–æ–ª–µ–º (—Ä—è–¥–∫–æ–≤–∏–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è–º).
 * ‚úÖ –ü–æ–∫–∞–∑—É—î–º–æ –¥–≤–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∏:
 *   - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π (toString() = name())
 *   - –∑ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–º toString(), —â–æ–± –ø–æ–≤–µ—Ä—Ç–∞—Ç–∏ displayName
 */
public class WithFieldDemo {

    public static void main(String[] args) {
        // 1Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ enum (toString() = name())
        Status status = Status.NEW;
        System.out.println("\n1. Standard enum (default toString = name):");
        System.out.println("Status = " + status);               // NEW
        System.out.println("Status.name() = " + status.name()); // NEW
        System.out.println("Status.displayName = " + status.getDisplayName()); // New Task

        // 2Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è enum –∑ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–º toString()
        Status2 status2 = Status2.NEW;
        System.out.println("\n2. Enum with overridden toString():");
        System.out.println("Status2 = " + status2);               // "New Task"
        System.out.println("Status2.name() = " + status2.name()); // NEW
        System.out.println("Status2.displayName = " + status2.getDisplayName()); // New Task

        // 3Ô∏è‚É£ –ü–µ—Ä–µ–±—ñ—Ä —É—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å
        System.out.println("\n3. All Status values:");
        for (Status s : Status.values()) {
            System.out.println("- " + s + " | name()=" + s.name() + " | displayName=" + s.getDisplayName());
        }

        System.out.println("\n3.1 All Status2 values:");
        for (Status2 s : Status2.values()) {
            System.out.println("- " + s + " | name()=" + s.name() + " | displayName=" + s.getDisplayName());
        }

        // 4Ô∏è‚É£ –ü–æ—à—É–∫ –ø–æ displayName
        Status parsed = Status.fromDisplayName("In progress");
        System.out.println("\n4. Parsed Status from displayName = " + parsed);

        Status2 parsed2 = Status2.fromDisplayName("Completed");
        System.out.println("4. Parsed Status2 from displayName = " + parsed2);
    }
}

/**
 * –í–∞—Ä—ñ–∞–Ω—Ç 1: —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–π enum —ñ–∑ –ø–æ–ª–µ–º
 * ‚úÖ –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º toString() = name()
 */
enum Status {
    NEW("New Task"),
    IN_PROGRESS("In progress"),
    DONE("Completed");

    // üîπ –ü–æ–ª–µ ‚Äî —Ü–µ –¥–∞–Ω—ñ, –ø–æ–≤‚Äô—è–∑–∞–Ω—ñ –∑ –∫–æ–∂–Ω–∏–º –∑–Ω–∞—á–µ–Ω–Ω—è–º enum
    private final String displayName;

    // üîπ –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–≤–∂–¥–∏ private (–Ω–µ –º–æ–∂–Ω–∞ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ enum –∑–∑–æ–≤–Ω—ñ)
    // JVM —Å—Ç–≤–æ—Ä—é—î –≤—Å—ñ enum-–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ —â–µ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–ª–∞—Å—É
    Status(String displayName) {
        this.displayName = displayName;
    }

    // üîπ Getter –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–æ–ª—è
    public String getDisplayName() {
        return displayName;
    }

    // üîπ –°—Ç–∞—Ç–∏—á–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ—à—É–∫—É –ø–æ –∑–Ω–∞—á–µ–Ω–Ω—é
    // –ö–æ—Ä–∏—Å–Ω–∏–π, –∫–æ–ª–∏ –º–∞—î–º–æ —Ä—è–¥–æ–∫ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑ JSON —á–∏ –ë–î),
    // –∞–ª–µ –Ω–µ —Ö–æ—á–µ–º–æ –Ω–∞–ø—Ä—è–º—É –≤–∏–∫–ª–∏–∫–∞—Ç–∏ valueOf(), –±–æ —Ç–æ–π –∫–∏–¥–∞—î –≤–∏–Ω—è—Ç–æ–∫ –Ω–∞ –±—É–¥—å-—è–∫—É –Ω–µ–≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ—Å—Ç—å
    public static Status fromDisplayName(String displayName) {
        for (Status s : values()) {
            if (s.displayName.equalsIgnoreCase(displayName)) {
                return s;
            }
        }
        throw new IllegalArgumentException("Unknown displayName: " + displayName);
    }
}

/**
 * –í–∞—Ä—ñ–∞–Ω—Ç 2: enum —ñ–∑ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–µ–Ω–∏–º toString()
 * ‚úÖ –¢–µ–ø–µ—Ä toString() –ø–æ–≤–µ—Ä—Ç–∞—î displayName (–∑—Ä—É—á–Ω—ñ—à–µ –¥–ª—è UI, –∞–ª–µ –º–µ–Ω—à —è–≤–Ω–æ –¥–ª—è –ª–æ–≥—ñ–∫–∏)
 */
enum Status2 {
    NEW("New Task"),
    IN_PROGRESS("In progress"),
    DONE("Completed");

    private final String displayName;

    Status2(String displayName) {
        this.displayName = displayName;
    }

    public String getDisplayName() {
        return displayName;
    }

    @Override
    public String toString() {
        return displayName;
    }

    public static Status2 fromDisplayName(String displayName) {
        for (Status2 s : values()) {
            if (s.displayName.equalsIgnoreCase(displayName)) {
                return s;
            }
        }
        throw new IllegalArgumentException("Unknown displayName: " + displayName);
    }
}

/*
üìò –ü–æ—è—Å–Ω–µ–Ω–Ω—è

üîπ 1. –ü–æ–ª—è
    –ú–∏ –¥–æ–¥–∞—î–º–æ –ø–æ–ª–µ (percent, description, code —Ç–æ—â–æ) –¥–æ enum, —è–∫—â–æ –∫–æ–∂–Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –º–∞—î —è–∫–µc—å –¥–æ–¥–∞—Ç–∫–æ–≤–µ –∑–Ω–∞—á–µ–Ω–Ω—è, –ø–æ–≤‚Äô—è–∑–∞–Ω–µ –∑ –Ω–µ—é.
    –¶–µ –ø–æ–ª–µ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è —á–µ—Ä–µ–∑ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –¥–ª—è –∫–æ–∂–Ω–æ—ó –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏.
    –ü–æ–ª—è —É enum –∑–∞–∑–≤–∏—á–∞–π —Ä–æ–±–ª—è—Ç—å private final ‚Üí –±–æ enum –Ω–µ–∑–º—ñ–Ω–Ω—ñ (immutable).

üîπ 2. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä
    –£ enum –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–≤–∂–¥–∏ private (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ —è–≤–Ω–æ –Ω–µ –Ω–∞–ø–∏—Å–∞–Ω–æ).
    –ß–æ–º—É? –¢–æ–º—É —â–æ –µ–∫–∑–µ–º–ø–ª—è—Ä–∏ enum —Å—Ç–≤–æ—Ä—é—î JVM –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ –∫–ª–∞—Å—É.
    –¢–∏ –Ω–µ –º–æ–∂–µ—à —Å—Ç–≤–æ—Ä–∏—Ç–∏ enum –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é new.
    –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –≤–∏–∫–ª–∏–∫–∞—î—Ç—å—Å—è –ª–∏—à–µ –¥–ª—è –æ–≥–æ–ª–æ—à–µ–Ω–∏—Ö –∫–æ–Ω—Å—Ç–∞–Ω—Ç (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, SEASONAL(10)).

üîπ 3. –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ñ –º–µ—Ç–æ–¥–∏
    –Ø–∫—â–æ enum –º—ñ—Å—Ç–∏—Ç—å –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥, —Ç–æ –∫–æ–∂–Ω–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞ –º—É—Å–∏—Ç—å –π–æ–≥–æ —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏.
    –¶–µ —Å—Ö–æ–∂–µ –Ω–∞ —Ç–µ, —è–∫ –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –∫–ª–∞—Å –∑–º—É—à—É—î –ø—ñ–¥–∫–ª–∞—Å–∏ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—Ç–∏ –º–µ—Ç–æ–¥–∏.
    Enum –Ω–µ –º–æ–∂–Ω–∞ –Ω–∞—Å–ª—ñ–¥—É–≤–∞—Ç–∏, —Ç–æ–º—É —î–¥–∏–Ω–µ –º—ñ—Å—Ü–µ –¥–ª—è —Ä–µ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–æ–≥–æ –º–µ—Ç–æ–¥—É ‚Äî —Ü–µ –∫–æ–∂–µ–Ω enum-–µ–ª–µ–º–µ–Ω—Ç.

üîπ 4. –ú–µ—Ç–æ–¥–∏ (getter‚Äô–∏)
    –Ø–∫—â–æ –ø–æ–ª–µ –ø—Ä–∏–≤–∞—Ç–Ω–µ, —Ç–æ –æ—Ç—Ä–∏–º–∞—Ç–∏ –π–æ–≥–æ –º–æ–∂–Ω–∞ –ª–∏—à–µ —á–µ—Ä–µ–∑ getter.
    –¶–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø—Ä–∞–∫—Ç–∏–∫–∞, –±–æ –Ω–∞–ø—Ä—è–º—É percent —á–∏ description –∑–∑–æ–≤–Ω—ñ –¥–æ—Å—Ç—É–ø–Ω—ñ –Ω–µ –±—É–¥—É—Ç—å.

üìò –í–∏—Å–Ω–æ–≤–∫–∏
    –ü–æ–ª—è –≤ enum –ø–æ—Ç—Ä—ñ–±–Ω—ñ, —â–æ–± –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ –¥–∞–Ω—ñ, —â–æ –Ω–∞–ª–µ–∂–∞—Ç—å –∫–æ–∂–Ω–æ–º—É –µ–ª–µ–º–µ–Ω—Ç—É.
    –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –∑–∞–≤–∂–¥–∏ private ‚Üí enum —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –ª–∏—à–µ JVM, –Ω–µ –≤—Ä—É—á–Ω—É.
    –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥ –∑–º—É—à—É—î –∫–æ–∂–µ–Ω –µ–ª–µ–º–µ–Ω—Ç —Ä–µ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ –≤–ª–∞—Å–Ω—É –ø–æ–≤–µ–¥—ñ–Ω–∫—É ‚Üí —Ü–µ —ñ —î —Å—Ç—Ä–∞—Ç–µ–≥—ñ—è.
    Getter‚Äô–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ –¥–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ –ø–æ–ª—ñ–≤, –±–æ –ø–æ–ª—è –ø—Ä–∏–≤–∞—Ç–Ω—ñ.



    üîπ Enum Status
        –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –ø–æ–≤–µ–¥—ñ–Ω–∫—É –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º:
        System.out.println(Status.NEW) ‚Üí NEW (–±–æ toString() = name()).
        –î–ª—è –¥—Ä—É–∂–Ω—å–æ–≥–æ —ñ–º–µ–Ω—ñ —Ç—Ä–µ–±–∞ —è–≤–Ω–æ –≤–∏–∫–ª–∏–∫–∞—Ç–∏ getDisplayName().

    üîπ Enum Status2

        –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—î toString():
        System.out.println(Status2.NEW) ‚Üí New Task.
        name() –≤—Å–µ –æ–¥–Ω–æ –ª–∏—à–∞—î—Ç—å—Å—è —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º (NEW).

    üîπ Best Practice

        –î–ª—è –ø—Ä–æ–¥–∞–∫—à–Ω-–∫–æ–¥—É —á–∞—Å—Ç—ñ—à–µ –∫—Ä–∞—â–µ –∑–∞–ª–∏—à–∞—Ç–∏ toString() —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∏–º —ñ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ getDisplayName() ‚Üí —Ü–µ –±—ñ–ª—å—à —è–≤–Ω–∏–π —ñ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –ø—ñ–¥—Ö—ñ–¥.
        –ü–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∞—Ç–∏ toString() –º–æ–∂–Ω–∞ –¥–ª—è UI, –ª–æ–≥—ñ–≤ —á–∏ –¥–µ–º–æ, –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ ‚Äú–ª—é–¥—Å—å–∫–∏–π‚Äù —Ç–µ–∫—Å—Ç.
 */
