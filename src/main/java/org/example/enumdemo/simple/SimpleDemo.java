package org.example.enumdemo.simple;


/**
 * –ù–∞–π–ø—Ä–æ—Å—Ç—ñ—à–∏–π –ø—Ä–∏–∫–ª–∞–¥ —Ä–æ–±–æ—Ç–∏ –∑ enum.
 * –¢—É—Ç –º–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—É—î–º–æ:
 * - —è–∫ –≤–∏–±—Ä–∞—Ç–∏ enum
 * - —è–∫ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ –≤ switch
 * - —è–∫ –ø–µ—Ä–µ–±—Ä–∞—Ç–∏ –≤—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
 */
public class SimpleDemo {

    public static void main(String[] args) {
        // 1Ô∏è‚É£ –í–∏–±—ñ—Ä –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–Ω—è
        Role role = Role.ADMIN;
        System.out.println("\n1. Selected role = " + role);

        // 2Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –≤ switch
        switch (role) {
            case ADMIN -> System.out.println("2. Admin can manage users");
            case USER -> System.out.println("2. User can view and edit profile");
            case DRIVER -> System.out.println("2. Driver can view tasks");
        }

        // 3Ô∏è‚É£ –ü–µ—Ä–µ–±—ñ—Ä —É—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å enum
        // values() ‚Üí —É—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (—á–∞—Å—Ç–æ –¥–ª—è UI/—Å–ø–∏—Å–∫—ñ–≤).
        System.out.println("\n3. Available roles:");
        for (Role r : Role.values()) {
            System.out.println("- " + r);
        }

        // 4Ô∏è‚É£ –î–µ—Ç–∞–ª—å–Ω—ñ—à–∏–π –ø–µ—Ä–µ–±—ñ—Ä (ordinal + name + toString)
        /*
            –í—ñ–¥–º—ñ–Ω–Ω—ñ—Å—Ç—å –º—ñ–∂ r —ñ r.name()

            System.out.println(r) –ø—ñ–¥ –∫–∞–ø–æ—Ç–æ–º –≤–∏–∫–ª–∏–∫–∞—î r.toString().
                –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —É enum toString() = name().

            System.out.println(r.name())
                –≤–∏–∫–ª–∏–∫–∞—î name() –Ω–∞–ø—Ä—è–º—É (—Ü–µ –∑–∞–≤–∂–¥–∏ –æ—Ä–∏–≥—ñ–Ω–∞–ª—å–Ω–µ —ñ–º‚Äô—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏).

            üëâ –¢–æ–±—Ç–æ –∑–∞—Ä–∞–∑ –≤–æ–Ω–∏ –æ–¥–Ω–∞–∫–æ–≤—ñ.
        */
        System.out.println("\n4. Available roles with extra info:");
        for (Role r : Role.values()) {
            System.out.println("- " + r
                    + " | ordinal=" + r.ordinal()
                    + " | name()=" + r.name()
                    + " | toString()=" + r.toString());
        }

        /*
            –ê–ª–µ —Ä—ñ–∑–Ω–∏—Ü—è –∑‚Äô—è–≤–ª—è—î—Ç—å—Å—è, —è–∫—â–æ –º–∏ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∏–º–æ toString() —É enum.
            For Role 2 override toString

            name() = –∑–∞–≤–∂–¥–∏ —Å–∏—Ä–µ —ñ–º‚Äô—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏.
            toString() = –º–æ–∂–Ω–∞ –∫–∞—Å—Ç–æ–º—ñ–∑—É–≤–∞—Ç–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤–∏–≤–æ–¥—É (–∞–ª–µ –Ω–µ –¥–ª—è –ª–æ–≥—ñ–∫–∏).
        */
        System.out.println("\n4.1. Available roles with extra info with overridden toString:");
        for (Role2 r : Role2.values()) {
            System.out.println("- " + r);
        }

        // 5Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è valueOf (—Ä—è–¥–æ–∫ ‚Üí enum)
        // valueOf(String) ‚Üí –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ —É enum. ‚ö†Ô∏è –ù–µ–±–µ–∑–ø–µ—á–Ω–æ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–º –≤–≤–æ–¥–æ–º (–∫–∏–¥–∞—î IllegalArgumentException).
        Role parsed = Role.valueOf("USER");
        System.out.println("\n5. Parsed from String = " + parsed);

        // 6Ô∏è‚É£ –ü–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è enum-—ñ–≤ (—Ç–∏–ø–æ–±–µ–∑–ø–µ—á–Ω–æ)
        // equals()/hashCode() ‚Üí —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω—ñ –∑ Object, –∞–ª–µ –∑–∞–∑–≤–∏—á–∞–π –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ (–±–æ == –¥–æ—Å—Ç–∞—Ç–Ω—å–æ).
        if (role == Role.ADMIN) {
            System.out.println("\n6. Role is ADMIN (compared with ==)");
        }

        // 7Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è compareTo (–ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–æ—Ä—è–¥–∫—É)
        // compareTo() ‚Üí –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–æ—Ä—è–¥–∫—É –º—ñ–∂ enum-–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏ (–ø–æ ordinal). ‚ùå(—Ä—ñ–¥–∫–æ –≤ –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ—Ü—ñ, –±—ñ–ª—å—à–µ –≤ —É—Ç–∏–ª—ñ—Ç–∞—Ö).
        int cmp = Role.ADMIN.compareTo(Role.USER);
        System.out.println("\n7. CompareTo(Admin vs User) = " + cmp);

        // 8Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è getDeclaringClass (–æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª–∞—Å enum)
        // getDeclaringClass() ‚Üí —É generic-—É—Ç–∏–ª—ñ—Ç–∞—Ö —á–∏ reflection-based –ª–æ–≥—ñ—Ü—ñ.
        System.out.println("\n8. Declaring class = " + Role.ADMIN.getDeclaringClass());
        System.out.println("8. Declaring class = " + Role2.ADMIN.getDeclaringClass());
        System.out.println("8. Declaring class = " + Role2.class.getSimpleName());

        // 9Ô∏è‚É£ –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è hashCode —ñ equals (–∑–≤–∏—á–∞–π–Ω—ñ –º–µ—Ç–æ–¥–∏ Object)
        System.out.println("\n9. HashCode of ADMIN = " + Role.ADMIN.hashCode());
        System.out.println("9. HashCode of USER = " + Role.USER.hashCode());
        System.out.println("9. Equals(Admin, User) = " + Role.ADMIN.equals(Role.USER));
    }
}

/**
 * Very basic enum example.
 * ‚úÖ –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –¥–ª—è –æ–±–º–µ–∂–µ–Ω–æ–≥–æ –Ω–∞–±–æ—Ä—É –∑–Ω–∞—á–µ–Ω—å
 */
enum Role {
    ADMIN,
    USER,
    DRIVER
}

enum Role2 {
    ADMIN, USER, DRIVER;

    @Override
    public String toString() {
        return "Role2: " + name();
    }
}


/*
* –¢–µ–æ—Ä–µ—Ç–∏—á–Ω—ñ –ø–æ—è—Å–Ω–µ–Ω–Ω—è –¥–æ –º–µ—Ç–æ–¥—ñ–≤
    ‚úÖ –û—Å–Ω–æ–≤–Ω—ñ –º–µ—Ç–æ–¥–∏ enum:

        values() ‚Üí —É—Å—ñ –∑–Ω–∞—á–µ–Ω–Ω—è (—á–∞—Å—Ç–æ –¥–ª—è UI/—Å–ø–∏—Å–∫—ñ–≤).

        ordinal() ‚Üí –ø–æ–∑–∏—Ü—ñ—è (0,1,2). ‚ö†Ô∏è –ù–µ –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É –ë–î, –±–æ –ø–æ—Ä—è–¥–æ–∫ –º–æ–∂–Ω–∞ –∑–º—ñ–Ω–∏—Ç–∏.

        name() ‚Üí –∑–∞–≤–∂–¥–∏ —Å–∏—Ä–µ —ñ–º‚Äô—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç–∏ (–±–µ–∑–ø–µ—á–Ω–∏–π –¥–ª—è –ª–æ–≥—ñ–∫–∏).

        toString() ‚Üí –¥–µ—Ñ–æ–ª—Ç–Ω–æ —è–∫ name(), –∞–ª–µ –º–æ–∂–Ω–∞ –ø–µ—Ä–µ–≤–∏–∑–Ω–∞—á–∏—Ç–∏ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤–∏–≤–æ–¥—É.

        valueOf(String) ‚Üí –∫–æ–Ω–≤–µ—Ä—Ç—É–≤–∞—Ç–∏ —Ä—è–¥–æ–∫ —É enum. ‚ö†Ô∏è –ù–µ–±–µ–∑–ø–µ—á–Ω–æ –∑ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏–º –≤–≤–æ–¥–æ–º (–∫–∏–¥–∞—î IllegalArgumentException).

        compareTo() ‚Üí –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è –ø–æ—Ä—è–¥–∫—É –º—ñ–∂ enum-–∫–æ–Ω—Å—Ç–∞–Ω—Ç–∞–º–∏ (–ø–æ ordinal).

        getDeclaringClass() ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î –∫–ª–∞—Å enum (–∫–æ—Ä–∏—Å–Ω–æ –¥–ª—è —Ä–µ—Ñ–ª–µ–∫—Å—ñ—ó —á–∏ generic-–º–µ—Ç–æ–¥—ñ–≤).

        equals()/hashCode() ‚Üí —É—Å–ø–∞–¥–∫–æ–≤–∞–Ω—ñ –∑ Object, –∞–ª–µ –∑–∞–∑–≤–∏—á–∞–π –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω—ñ (–±–æ == –¥–æ—Å—Ç–∞—Ç–Ω—å–æ).


    üîπ –í —è–∫–∏—Ö —Å–∏—Ç—É–∞—Ü—ñ—è—Ö —â–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏?

        values() ‚Üí –∫–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–µ–Ω —Å–ø–∏—Å–æ–∫ —É—Å—ñ—Ö –∑–Ω–∞—á–µ–Ω—å (UI drop-down, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—è, –∞–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è).

        ordinal() ‚Üí –¥–ª—è –≤–Ω—É—Ç—Ä—ñ—à–Ω—ñ—Ö –∞–ª–≥–æ—Ä–∏—Ç–º—ñ–≤, –∞–ª–µ ‚ö†Ô∏è –Ω—ñ–∫–æ–ª–∏ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —É –ë–î.

        name() ‚Üí –¥–ª—è —Å—Ç–∞–±—ñ–ª—å–Ω–æ–≥–æ –ª–æ–≥—ñ—á–Ω–æ–≥–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –º–∞–ø—ñ–Ω–≥ —Ä—è–¥–∫—ñ–≤).

        toString() ‚Üí –¥–ª—è –≥–∞—Ä–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É (UI, –ª–æ–≥–∏).

        valueOf() ‚Üí –∫–æ–ª–∏ –∫–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ –∑ –≤—ñ–¥–æ–º–æ–≥–æ, –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ–≥–æ —Ä—è–¥–∫–∞ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∑ –ë–î).

        compareTo() ‚Üí –∫–æ–ª–∏ —Ç—Ä–µ–±–∞ –ø–æ—Ä—ñ–≤–Ω—è—Ç–∏ –ø–æ—Ä—è–¥–æ–∫ (—Ä—ñ–¥–∫–æ –≤ –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ—Ü—ñ, –±—ñ–ª—å—à–µ –≤ —É—Ç–∏–ª—ñ—Ç–∞—Ö).

        getDeclaringClass() ‚Üí —É generic-—É—Ç–∏–ª—ñ—Ç–∞—Ö —á–∏ reflection-based –ª–æ–≥—ñ—Ü—ñ.




    üîπ getDeclaringClass() vs class.getSimpleName()

        1. Role.ADMIN.getDeclaringClass()

            –¶–µ –º–µ—Ç–æ–¥ –∑ enum-–∑–Ω–∞—á–µ–Ω–Ω—è (—ñ–Ω—Å—Ç–∞–Ω—Å—É).
            –í—ñ–Ω –ø–æ–≤–µ—Ä—Ç–∞—î Class –æ–±‚Äô—î–∫—Ç, —è–∫–∏–π "–æ–≥–æ–ª–æ—Å–∏–≤" —Ü–µ–π enum-–µ–ª–µ–º–µ–Ω—Ç.

            System.out.println(Role.ADMIN.getDeclaringClass());
            // output: org.example.enumdemo.simple.Role

            ‚ö° –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
                –∫–æ–ª–∏ —É —Ç–µ–±–µ —î –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è (Role.ADMIN), –∞–ª–µ —Ç–∏ —Ö–æ—á–µ—à –æ—Ç—Ä–∏–º–∞—Ç–∏ –∫–ª–∞—Å enum, –¥–æ —è–∫–æ–≥–æ –≤–æ–Ω–æ –Ω–∞–ª–µ–∂–∏—Ç—å;
                —á–∞—Å—Ç–æ –≤ generic –º–µ—Ç–æ–¥–∞—Ö —á–∏ reflection, –∫–æ–ª–∏ —Ç–∏ –Ω–µ –∑–Ω–∞—î—à –∫–ª–∞—Å –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å.

        üîπ 2. Role.class.getSimpleName()

            –¶–µ —Ä–æ–±–æ—Ç–∞ –Ω–∞–ø—Ä—è–º—É –∑ –∫–ª–∞—Å–æ–º (—á–µ—Ä–µ–∑ –º–µ—Ç–∞-—ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é).
            Role.class ‚Üí —Ü–µ —Å–∞–º –∫–ª–∞—Å Role.
            getSimpleName() –ø–æ–≤–µ—Ä—Ç–∞—î –ø—Ä–æ—Å—Ç–æ —ñ–º‚Äô—è –∫–ª–∞—Å—É –±–µ–∑ –ø–∞–∫–µ—Ç—É ‚Üí "Role".

            System.out.println(Role.class.getSimpleName());
            // output: Role

            ‚ö° –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
                –∫–æ–ª–∏ —Ç–∏ –∑–Ω–∞—î—à –∫–ª–∞—Å –Ω–∞–ø–µ—Ä–µ–¥ —ñ —Ö–æ—á–µ—à –ø—Ä–æ—Å—Ç–æ –π–æ–≥–æ –Ω–∞–∑–≤—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è, –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å).
                –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É —á–∏ –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü—ñ—ó.

        üîπ –û—Å–Ω–æ–≤–Ω–∞ —Ä—ñ–∑–Ω–∏—Ü—è

            getDeclaringClass() ‚Üí –≤—ñ–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ enum-–∑–Ω–∞—á–µ–Ω–Ω—è ‚Üí –¥–∞—î Class (–º–æ–∂–Ω–∞ –¥–∞–ª—ñ —Ä–æ–±–∏—Ç–∏ .getSimpleName(), .getPackageName(), .getName()).

            Role.class.getSimpleName() ‚Üí –Ω–∞–ø—Ä—è–º—É –≤—ñ–¥ –∫–ª–∞—Å—É ‚Üí –¥–∞—î –≤–∂–µ —Ä—è–¥–æ–∫ —ñ–∑ –Ω–∞–∑–≤–æ—é –∫–ª–∞—Å—É.

        üîπ –ü—Ä–∏–∫–ª–∞–¥–∏ —Ä—ñ–∑–Ω–∏—Ü—ñ —É –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—ñ
            // –º–∞—î–º–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è
            Role role = Role.ADMIN;

            // –≤–∞—Ä—ñ–∞–Ω—Ç 1: –æ—Ç—Ä–∏–º—É—î–º–æ –∫–ª–∞—Å –∑ —ñ–Ω—Å—Ç–∞–Ω—Å—É
            Class<?> clazz = role.getDeclaringClass();
            System.out.println(clazz);                // class Role
            System.out.println(clazz.getSimpleName()); // Role

            // –≤–∞—Ä—ñ–∞–Ω—Ç 2: –ø—Ä–∞—Ü—é—î–º–æ –Ω–∞–ø—Ä—è–º—É –∑ –∫–ª–∞—Å–æ–º
            System.out.println(Role.class.getSimpleName()); // Role


        üëâ –Ø–∫—â–æ —É —Ç–µ–±–µ –≤–∂–µ —î –∑–º—ñ–Ω–Ω–∞ role (—Ç–∏–ø—É Role), –∑—Ä—É—á–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–≤–∞—Ç–∏ role.getDeclaringClass().
        üëâ –Ø–∫—â–æ —Ç–∏ –ø—Ä–æ—Å—Ç–æ –ø—Ä–∞—Ü—é—î—à —ñ–∑ —Å–∞–º–∏–º –∫–ª–∞—Å–æ–º, —Ç–æ –ª–æ–≥—ñ—á–Ω—ñ—à–µ Role.class.getSimpleName().
*/