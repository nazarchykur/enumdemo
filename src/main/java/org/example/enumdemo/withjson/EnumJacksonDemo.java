package org.example.enumdemo.withjson;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.ObjectMapper;

/**
 * DTO –ø—Ä–∏–∫–ª–∞–¥ —ñ–∑ enum
 * –ü–æ–∫–∞–∑—É—î–º–æ —Ä—ñ–∑–Ω—ñ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó/–¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑ Jackson
 */
public class EnumJacksonDemo {

    public static void main(String[] args) throws Exception {
        ObjectMapper mapper = new ObjectMapper();

        // 1Ô∏è‚É£ –°–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è DTO ‚Üí JSON
        EmployeeDto dto = new EmployeeDto("Nazar", Role.ADMIN, EmploymentType.FULL_TIME);
        String json = mapper.writeValueAsString(dto); // –°–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è
        System.out.println("1. DTO ‚Üí JSON:");
        System.out.println(json);

        // 2Ô∏è‚É£ –î–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è JSON ‚Üí DTO
        // "employmentType": "Part time"   –±–æ displayName
        String inputJson = """
                {
                  "name": "Nazar",
                  "role": "USER",
                  "employmentType": "Part time"
                }
                """;
        EmployeeDto dto2 = mapper.readValue(inputJson, EmployeeDto.class);
        System.out.println("\n2. JSON ‚Üí DTO:");
        System.out.println(dto2);

        // 3Ô∏è‚É£ –î–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è JSON ‚Üí DTO, –∞–ª–µ —Ç—É—Ç –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ —Ç–∏–ø

        String inputJson2 = """
                {
                  "name": "Nazar",
                  "role": "USER",
                  "employmentType": "PART_TIME"
                }
                """;
        EmployeeDto dto3 = mapper.readValue(inputJson2, EmployeeDto.class);
        System.out.println("\n3. JSON ‚Üí DTO:");
        System.out.println(dto3);
    }
}

// DTO –∑ enum –ø–æ–ª—è–º–∏
class EmployeeDto {
    private String name;
    private Role role;
    private EmploymentType employmentType;

    public EmployeeDto() {
    }

    public EmployeeDto(String name, Role role, EmploymentType employmentType) {
        this.name = name;
        this.role = role;
        this.employmentType = employmentType;
    }

    public String getName() {
        return name;
    }

    public Role getRole() {
        return role;
    }

    public EmploymentType getEmploymentType() {
        return employmentType;
    }

    @Override
    public String toString() {
        return "EmployeeDto{name='" + name + "', role=" + role + ", employmentType=" + employmentType + "}";
    }
}

enum Role {
    ADMIN,
    USER,
    DRIVER
}

/**
 * Enum —ñ–∑ –∫–∞—Å—Ç–æ–º–Ω–∏–º –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º
 */
enum EmploymentType {
    FULL_TIME("Full time"),
    PART_TIME("Part time"),
    CONTRACTOR("Contractor");

    private final String displayName;

    EmploymentType(String displayName) {
        this.displayName = displayName;
    }

    public String getDisplayName() {
        return displayName;
    }

    // üîπ –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º —É JSON –±—É–¥–µ FULL_TIME, PART_TIME, CONTRACTOR
    // –Ø–∫—â–æ —Ö–æ—á–µ–º–æ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏ displayName ‚Üí –¥–æ–¥–∞—î–º–æ @JsonValue
    @JsonValue
    public String toJson() {
        return displayName; // "Full time", "Part time", "Contractor"
    }

    // üîπ –î–ª—è –¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó –∑ "Full time" –Ω–∞–∑–∞–¥ —É enum
    // Jackson –¥–∏–≤–∏—Ç—å—Å—è –Ω–∞ @JsonCreator ‚Üí —à—É–∫–∞—î EmploymentType –ø–æ displayName ‚Üí –∑–Ω–∞—Ö–æ–¥–∏—Ç—å "Part time" ‚Üí –ø–æ–≤–µ—Ä—Ç–∞—î EmploymentType.PART_TIME.
    @JsonCreator
    public static EmploymentType fromJson(String value) {
        for (EmploymentType type : values()) {
            if (type.displayName.equalsIgnoreCase(value) || type.name().equalsIgnoreCase(value)) {
                return type;
            }
        }
        throw new IllegalArgumentException("Unknown value: " + value);
    }
}


/*
üîπ –ö–æ–ª–∏ —Ç–∞–∫–∏–π –ø—ñ–¥—Ö—ñ–¥ —ñ–¥–µ–∞–ª—å–Ω–∏–π?
    –Ø–∫—â–æ —Ü–µ–π JSON –π–¥–µ —É –∑–æ–≤–Ω—ñ—à–Ω—ñ–π API/UI ‚Üí —Ç–∞–º –∫—Ä–∞—â–µ –ø–æ–∫–∞–∑–∞—Ç–∏ "Part time", –∞ –Ω–µ "PART_TIME".
    –Ø–∫—â–æ —Ç—Ä–µ–±–∞ —á—ñ—Ç–∫–æ –≤—ñ–¥–¥—ñ–ª–∏—Ç–∏ —Ç–µ—Ö–Ω—ñ—á–Ω—É –Ω–∞–∑–≤—É (name) —ñ –ª—é–¥—Å—å–∫–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è (displayName).
    –Ø–∫—â–æ —É —Ç–µ–±–µ –æ–¥–Ω–∞–∫–æ–≤–∏–π enum –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è —ñ –≤ –ë–î (name()), —ñ –≤ API (displayName).

üîπ –ú—ñ–Ω—É—Å
    –¢–µ–ø–µ—Ä JSON –Ω–µ –ø—Ä–∏–π–º–µ "PART_TIME" –Ω–∞–ø—Ä—è–º—É, –±–æ @JsonCreator –ø–µ—Ä–µ–≤—ñ—Ä—è—î —Ç—ñ–ª—å–∫–∏ displayName.
    –ê–ª–µ —Ü–µ –º–æ–∂–Ω–∞ –≤–∏–ø—Ä–∞–≤–∏—Ç–∏ —Ç–∞–∫ —è–∫—â–æ –¥–æ–¥–∞—Ç–∏ ... || type.name().equalsIgnoreCase(value):

    @JsonCreator
    public static EmploymentType fromJson(String value) {
        for (EmploymentType type : values()) {
            if (type.displayName.equalsIgnoreCase(value) || type.name().equalsIgnoreCase(value)) {
                return type;
            }
        }
        throw new IllegalArgumentException("Unknown value: " + value);
    }

    –¢–æ–¥—ñ –ø—Ä–∞—Ü—é–≤–∞—Ç–∏–º–µ —ñ "PART_TIME", —ñ "Part time".


üìå –í–∏—Å–Ω–æ–≤–æ–∫:

    –¢–≤—ñ–π –≤–∞—Ä—ñ–∞–Ω—Ç –ø–æ–≤–Ω—ñ—Å—Ç—é –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —ñ best practice –¥–ª—è –∑–æ–≤–Ω—ñ—à–Ω—å–æ–≥–æ API.
    –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –ø—ñ–¥—Ç—Ä–∏–º–∞—Ç–∏ –æ–±–∏–¥–≤–∞ –≤–∞—Ä—ñ–∞–Ω—Ç–∏ (name + displayName) ‚Üí –¥–æ–ø–∏—Å—É—î–º–æ —É–º–æ–≤—É –≤ @JsonCreator.
 */

/*
‚ÄºÔ∏è @JsonValue —ñ @JsonCreator –Ω–µ –º–∞—é—Ç—å –ø—Ä—è–º–æ–≥–æ –≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è –¥–æ —Ç–æ–≥–æ, —á–∏ –º–∏ —Å–∞–º—ñ –≤–∏–∫–ª–∏–∫–∞—î–º–æ ObjectMapper, —á–∏ –Ω—ñ.

üîπ –Ø–∫ –≤–æ–Ω–æ –ø—Ä–∞—Ü—é—î –Ω–∞—Å–ø—Ä–∞–≤–¥—ñ

    Spring Boot –ø—ñ–¥ –∫–∞–ø–æ—Ç–æ–º —É—Å–µ –æ–¥–Ω–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î ObjectMapper Jackson –¥–ª—è —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó/–¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—ó.
    –ö–æ–ª–∏ —Ç–∏ —Ä–æ–±–∏—à @RestController —ñ –ø—Ä–∏–π–º–∞—î—à/–ø–æ–≤–µ—Ä—Ç–∞—î—à DTO ‚Äî —Ü–µ —Ç–æ–π —Å–∞–º–∏–π –ø—Ä–æ—Ü–µ—Å, —â–æ —ñ —è–∫–±–∏ —Ç–∏ —Å–∞–º –≤–∏–∫–ª–∏–∫–∞–≤ mapper.readValue(...) —á–∏ mapper.writeValueAsString(...).

    –†—ñ–∑–Ω–∏—Ü—è –ª–∏—à–µ –≤ —Ç–æ–º—É, —â–æ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞—Ö —Ü–∏–º –∫–µ—Ä—É—î Spring –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.

üëâ –¢–æ–±—Ç–æ @JsonValue —ñ @JsonCreator –≤–ø–ª–∏–≤–∞—é—Ç—å –∑–∞–≤–∂–¥–∏, –Ω–µ–∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Ç–æ–≥–æ, —á–∏ —Ç–∏ –≤—Ä—É—á–Ω—É –ø—Ä–∞—Ü—é—î—à –∑ ObjectMapper, —á–∏ –≤–æ–Ω–æ –≤—ñ–¥–±—É–≤–∞—î—Ç—å—Å—è "–∑–∞ –∫—É–ª—ñ—Å–∞–º–∏".


üîπ –ö–æ–ª–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ @JsonValue —ñ @JsonCreator

    –Ø–∫—â–æ —Ç–µ–±–µ –≤–ª–∞—à—Ç–æ–≤—É—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞ –ø–æ–≤–µ–¥—ñ–Ω–∫–∞ (enum ‚Üí name) ‚Üí –Ω—ñ—á–æ–≥–æ –Ω–µ —Ç—Ä–µ–±–∞, –±—É–¥–µ "PART_TIME".
    –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à —ñ–Ω—à–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, displayName = "Part time") ‚Üí —Ç–æ–¥—ñ –¥–æ–¥–∞—î—à @JsonValue —ñ @JsonCreator.

    –í–æ–Ω–∏ –ø–æ—Ç—Ä—ñ–±–Ω—ñ —è–∫ —É –≤–∏–ø–∞–¥–∫—É:
        –∫–æ–ª–∏ —Ç–∏ —Ç–µ—Å—Ç—É—î—à —á–µ—Ä–µ–∑ ObjectMapper –≤—Ä—É—á–Ω—É,
        —Ç–∞–∫ —ñ –∫–æ–ª–∏ Spring —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î/–¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î DTO –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.

üîπ –ü—Ä–æ—Å—Ç–∏–π –ø—Ä–∏–∫–ª–∞–¥
    enum EmploymentType {
        FULL_TIME("Full time"),
        PART_TIME("Part time");

        private final String displayName;

        EmploymentType(String displayName) { this.displayName = displayName; }

        @JsonValue
        public String toJson() {
            return displayName; // –∑–∞–º—ñ—Å—Ç—å "PART_TIME" –±—É–¥–µ "Part time"
        }

        @JsonCreator
        public static EmploymentType fromJson(String value) {
            for (EmploymentType t : values()) {
                if (t.displayName.equalsIgnoreCase(value)) {
                    return t;
                }
            }
            throw new IllegalArgumentException("Unknown value: " + value);
        }
    }


    –¢–µ–ø–µ—Ä:
        POST –∑–∞–ø–∏—Ç –∑ "employmentType": "Part time" ‚Üí –¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è —É EmploymentType.PART_TIME.
        GET –≤—ñ–¥–ø–æ–≤—ñ–¥—å —ñ–∑ DTO ‚Üí —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î—Ç—å—Å—è —É "employmentType": "Part time".

        –Ü —Ç—É—Ç –Ω–∞–º –Ω–µ —Ç—Ä–µ–±–∞ –Ω–∞–ø—Ä—è–º—É —á—ñ–ø–∞—Ç–∏ ObjectMapper ‚Äî Spring Boot –≤—Å–µ –∑—Ä–æ–±–∏—Ç—å –∑–∞ –Ω–∞—Å.


üìå –í–∏—Å–Ω–æ–≤–æ–∫

    @JsonValue / @JsonCreator –Ω–µ "–¥–ª—è ObjectMapper –≤—Ä—É—á–Ω—É".
    –í–æ–Ω–∏ –≤–ø–ª–∏–≤–∞—é—Ç—å –Ω–∞ –±—É–¥—å-—è–∫—É —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é/–¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é Jackson ‚Üí —ñ –≤ –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä–∞—Ö, —ñ –≤ —Å–µ—Ä–≤—ñ—Å–∞—Ö, —ñ –≤ —Ç–µ—Å—Ç–∞—Ö.
    –ú–∏ –ø–∏—à–µ–º–æ —ó—Ö —Ç—ñ–ª—å–∫–∏ —Ç–æ–¥—ñ, –∫–æ–ª–∏ —Ö–æ—á–µ–º–æ –∫–∞—Å—Ç–æ–º–Ω–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—è enum —É JSON (–Ω–µ name(), –∞ —â–æ—Å—å —Å–≤–æ—î).



üîπ 1. –í—Ö—ñ–¥–Ω–∏–π –∑–∞–ø–∏—Ç (Request DTO)

    –ö–æ–ª–∏ –∫–ª—ñ—î–Ω—Ç (—Ñ—Ä–æ–Ω—Ç —á–∏ —ñ–Ω—à–∏–π —Å–µ—Ä–≤—ñ—Å) —à–ª–µ –Ω–∞–º JSON, Spring Boot —á–µ—Ä–µ–∑ Jackson –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î –π–æ–≥–æ –≤ DTO.

    –Ø–∫—â–æ DTO –º–∞—î –ø–æ–ª–µ —Ç–∏–ø—É enum, —Ç–æ Jackson –æ—á—ñ–∫—É—î –∑–Ω–∞—á–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ name() (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º).

    –ü—Ä–∏–∫–ª–∞–¥ JSON:
        {
          "name": "Nazar",
          "role": "USER",
          "employmentType": "PART_TIME"
        }

    DTO:
        record EmployeeRequestDto(String name, Role role, EmploymentType employmentType) {}


    üëâ –¢—É—Ç –≥–æ–ª–æ–≤–Ω–∞ –ø–µ—Ä–µ–≤–∞–≥–∞: –±–µ–∑–ø–µ—á–Ω–∏–π —Ç–∏–ø.
        –Ø–∫—â–æ –ø—Ä–∏–ª–µ—Ç–∏—Ç—å —â–æ—Å—å –∑–∞–π–≤–µ ("employmentType":"SOME_UNKNOWN") ‚Üí Jackson –∫–∏–Ω–µ –ø–æ–º–∏–ª–∫—É.
        –¢–æ–±—Ç–æ –º–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞—Ö–∏—â–µ–Ω—ñ –≤—ñ–¥ —Å–º—ñ—Ç—Ç—è —É JSON.


üîπ 2. –£—Å–µ—Ä–µ–¥–∏–Ω—ñ –∫–æ–¥—É (—Å–µ—Ä–≤—ñ—Å, –±—ñ–∑–Ω–µ—Å-–ª–æ–≥—ñ–∫–∞)

    –ú–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ —Ç–∏–ø–æ–±–µ–∑–ø–µ—á–Ω–∏–º enum:
    if (dto.employmentType() == EmploymentType.FULL_TIME) { ... }

    –¢—É—Ç —É–∂–µ –≤–∑–∞–≥–∞–ª—ñ –Ω–µ–≤–∞–∂–ª–∏–≤–æ, —è–∫ –≤–æ–Ω–æ –ø—Ä–∏–π—à–ª–æ —É JSON ‚Üí –º–∏ –ø—Ä–∞—Ü—é—î–º–æ –∑ enum —è–∫ –∑—ñ –∑–≤–∏—á–∞–π–Ω–∏–º —Ç–∏–ø–æ–º.


üîπ 3. –í–∏—Ö—ñ–¥–Ω–∏–π —Ä–µ—Å–ø–æ–Ω—Å (Response DTO)

    –ö–æ–ª–∏ –º–∏ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ DTO —É –∫–æ–Ω—Ç—Ä–æ–ª–µ—Ä—ñ, Spring Boot —á–µ—Ä–µ–∑ Jackson –∑–Ω–æ–≤—É –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î –π–æ–≥–æ –≤ JSON.
    –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º enum ‚Üí name() (PART_TIME).
    –ê–ª–µ —è–∫—â–æ —Ç—Ä–µ–±–∞ –¥–ª—è UI –¥—Ä—É–∂–Ω—ñ –Ω–∞–∑–≤–∏ ‚Üí –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ @JsonValue.

    –ü—Ä–∏–∫–ª–∞–¥:
        record EmployeeResponseDto(String name, Role role, EmploymentType employmentType) {}

    –í–∏—Ö—ñ–¥–Ω–∏–π JSON:
        {
          "name": "Nazar",
          "role": "USER",
          "employmentType": "PART_TIME"
        }

üîπ 4. –ß–∏ —Ç—Ä–µ–±–∞ –Ω–∞–º –≤—Ä—É—á–Ω—É —é–∑–∞—Ç–∏ ObjectMapper?

    ‚ùå –£ 99% –≤–∏–ø–∞–¥–∫—ñ–≤ ‚Äî –Ω—ñ.
        –í—Ö—ñ–¥–Ω—ñ JSON ‚Üí DTO –¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ (Jackson —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–π —É Spring Boot).
        –í–∏—Ö—ñ–¥–Ω—ñ DTO ‚Üí JSON —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ.

    ‚úÖ –ú–∏ –º–æ–∂–µ–º–æ —é–∑–∞—Ç–∏ ObjectMapper –≤—Ä—É—á–Ω—É —Ç—ñ–ª—å–∫–∏:
        —É —Ç–µ—Å—Ç–∞—Ö (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–æ–ª–∏ –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ JSON-–≤—ñ–¥–ø–æ–≤—ñ–¥—å),
        —É —Ä—ñ–¥–∫—ñ—Å–Ω–∏—Ö –≤–∏–ø–∞–¥–∫–∞—Ö, —è–∫—â–æ —Ç—Ä–µ–±–∞ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É–≤–∞—Ç–∏ —É —Ñ–∞–π–ª —á–∏ –≤ Kafka message.


üìå –í–∏—Å–Ω–æ–≤–æ–∫
    Request DTO ‚Üí enum —è–∫ name() (–±–µ–∑–ø–µ—á–Ω–∏–π, —è–∫—â–æ –Ω–µ –≤–∞–ª—ñ–¥–Ω–∏–π ‚Äî –±—É–¥–µ –ø–æ–º–∏–ª–∫–∞).
    Service Layer ‚Üí –ø—Ä–∞—Ü—é—î–º–æ –∑ enum —è–∫ –∑ –Ω–æ—Ä–º–∞–ª—å–Ω–∏–º —Ç–∏–ø–æ–º.
    Response DTO ‚Üí –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤—ñ–¥–¥–∞—î–º–æ name(). –Ø–∫—â–æ —Ç—Ä–µ–±–∞ –¥—Ä—É–∂–Ω—î ‚Äî —Å—Ç–∞–≤–∏–º–æ @JsonValue.
    ObjectMapper ‚Üí –Ω–µ —é–∑–∞—î–º–æ –Ω–∞–ø—Ä—è–º—É —É –∑–≤–∏—á–∞–π–Ω–æ–º—É –∫–æ–¥—ñ, –≤—Å–µ –ø—Ä–∞—Ü—é—î ‚Äú–∑–∞ –∫—É–ª—ñ—Å–∞–º–∏‚Äù Spring Boot.
 */

/*
üîπ –Ø–∫ –ø–æ–≤–æ–¥–∏—Ç—å—Å—è Jackson –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
    enum Role {
        ADMIN,
        USER,
        DRIVER
    }

    –ü—Ä–∏–∫–ª–∞–¥ DTO:
        record EmployeeDto(String name, Role role) {}

    –í—Ö—ñ–¥–Ω–∏–π JSON (Request):
        {
          "name": "Nazar",
          "role": "USER"
        }

    –í–∏—Ö—ñ–¥–Ω–∏–π JSON (Response):
        {
          "name": "Nazar",
          "role": "USER"
        }


üëâ –¢—É—Ç Jackson –ø—Ä–æ—Å—Ç–æ —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î/–¥–µ—Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î –∑–∞ name().

üîπ –ß–∏ —Ç—Ä–µ–±–∞ @JsonValue / @JsonCreator?
    ‚ùå –ù—ñ, –Ω–µ —Ç—Ä–µ–±–∞.
    –ë–æ —É enum –Ω–µ–º–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–∏—Ö –ø–æ–ª—ñ–≤ (—Ç–∏–ø—É displayName), –æ—Ç–∂–µ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ name().
    –¶–µ —ñ —î best practice: –∑–±–µ—Ä—ñ–≥–∞—Ç–∏ —É JSON –∑–Ω–∞—á–µ–Ω–Ω—è —è–∫ "ADMIN", "USER", "DRIVER".

üîπ –ö–æ–ª–∏ –≤—Å–µ –∂ –º–æ–∂–Ω–∞ –≤—Ç—Ä—É—Ç–∏—Ç–∏—Å—è?

    –Ø–∫—â–æ —Ç–∏ —Ö–æ—á–µ—à, —â–æ–± JSON –ø–æ–∫–∞–∑—É–≤–∞–≤ –Ω–µ name(), –∞ —â–æ—Å—å —ñ–Ω—à–µ.
    –ù–∞–ø—Ä–∏–∫–ª–∞–¥, –∑–∞–º—ñ—Å—Ç—å "USER" ‚Üí "User":

    enum Role {
        ADMIN, USER, DRIVER;

        @Override
        public String toString() {
            return name().charAt(0) + name().substring(1).toLowerCase();
        }
    }

    –ê–±–æ –∑ @JsonValue:
        enum Role {
            ADMIN, USER, DRIVER;

            @JsonValue
            public String toJson() {
                return name().toLowerCase(); // "admin", "user", "driver"
            }
        }

    –¢–æ–¥—ñ JSON –≤–∏–≥–ª—è–¥–∞—Ç–∏–º–µ –æ—Å—å —Ç–∞–∫:
        {
          "name": "Nazar",
          "role": "user"
        }


üìå –í–∏—Å–Ω–æ–≤–æ–∫
    –Ø–∫—â–æ enum –ø—Ä–æ—Å—Ç–∏–π (–±–µ–∑ –ø–æ–ª—ñ–≤) ‚Üí –Ω—ñ—á–æ–≥–æ –¥–æ–¥–∞—Ç–∫–æ–≤–æ–≥–æ –Ω–µ —Ç—Ä–µ–±–∞, Jackson —Å–µ—Ä—ñ–∞–ª—ñ–∑—É—î —è–∫ name().
    @JsonValue / @JsonCreator –ø–æ—Ç—Ä—ñ–±–Ω—ñ —Ç—ñ–ª—å–∫–∏ –∫–æ–ª–∏ —Ç–∏ —Ö–æ—á–µ—à –∑–º—ñ–Ω–∏—Ç–∏ —Ñ–æ—Ä–º–∞—Ç JSON (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, "user" –∑–∞–º—ñ—Å—Ç—å "USER" –∞–±–æ "User").
    –£ 90% –≤–∏–ø–∞–¥–∫—ñ–≤ –¥–ª—è –ø—Ä–æ—Å—Ç–∏—Ö enum ‚Üí –ø—Ä–æ—Å—Ç–æ –ª–∏—à–∞—î–º–æ —è–∫ —î.
 */